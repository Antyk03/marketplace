/*
 * Questo file è stato aggiornato per garantire la compatibilità tra Jersey 3.x, Weld 5.x e Java 17.
 * Le versioni delle dipendenze sono state selezionate in base alla compatibilità e alla stabilità.
 */

plugins {
    id 'application'
    id 'war'
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    // Jersey e dipendenze correlate
    implementation 'org.glassfish.jersey.core:jersey-server:3.1.11' // Jersey Server
    implementation 'org.glassfish.jersey.ext:jersey-bean-validation:3.1.11' // Validazione Bean
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.11' // Supporto JSON con Jackson
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.11' // Dependency Injection con HK2
    implementation 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:3.1.11'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet-core:3.1.11'
    implementation 'org.glassfish.jersey.ext.cdi:jersey-cdi1x:3.1.2'
    implementation 'org.glassfish.jersey.ext.cdi:jersey-cdi1x-servlet:3.1.2'
    //API JPA
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Database H2 in memoria
    //runtimeOnly 'com.h2database:h2:2.2.224'

    // Jakarta EE
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.0.0' // JAX-RS API
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1' // Jakarta Inject API

    // Weld (CDI)
    implementation 'org.jboss.weld.servlet:weld-servlet-core:5.1.0.Final' // CDI 3.0 con Weld 5.x

    // Jackson per la gestione delle date
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.0' // Gestione delle date con Java 8+

    // SLF4J per il logging
    implementation 'org.slf4j:slf4j-api:2.0.1' // API SLF4J
    runtimeOnly 'ch.qos.logback:logback-classic:1.3.1' // Implementazione di SLF4J con Logback

    // Guava per utilità generiche
    implementation 'com.google.guava:guava:33.4.8-jre' // Libreria di utilità di Google

    // Lombok per ridurre il boilerplate del codice
    implementation 'org.projectlombok:lombok:1.18.24' // Lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.24' // Processor per Lombok

    // JWT per la gestione dei JSON Web Token
    implementation 'com.auth0:java-jwt:4.4.0' // Libreria per la gestione dei JWT

    // ModelMapper per il mapping tra oggetti
    implementation 'org.modelmapper:modelmapper:3.2.4' // Mapper per oggetti Java

    // Hibernate ORM per la gestione della persistenza
    implementation 'org.hibernate.orm:hibernate-core:7.1.0.Final' // Core di Hibernate ORM

    // JAXB per la serializzazione/deserializzazione XML
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5' // Runtime JAXB

    // Driver PostgreSQL (JDBC)
    implementation 'org.postgresql:postgresql:42.7.8'

    // Dipendenze per i test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.13.0-M3' // JUnit Jupiter API
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.13.0-M3' // Motore di esecuzione JUnit Jupiter
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Impostazione della versione di Java a 17
    }
}

application {
    mainClass = 'antyk03.marketplaceserver.Applicazione' // Classe principale dell'applicazione
}

testing {
    suites {
        test {
            useJUnitJupiter('5.13.0-M3') // Utilizzo di JUnit Jupiter per i test
            dependencies {
                implementation 'org.junit.jupiter:junit-jupiter-api:5.13.0-M3' // Dipendenza per JUnit Jupiter API
                runtimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.13.0-M3' // Motore di esecuzione per JUnit Jupiter
            }
        }
    }
}

tasks.register('runH2', JavaExec) {
    group = 'H2'
    description = 'Avvia H2 console'

    // usa il classpath del progetto per includere H2
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('org.h2.tools.Server')  // H2 Server main class
    args = ['-web', '-webAllowOthers', '-tcp', '-tcpAllowOthers', '-browser', '-tcpPort', '9092', '-webPort', '8082']
}



apply from: 'tomcat.gradle' // Applicazione delle configurazioni specifiche per Tomcat

